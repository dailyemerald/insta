// Generated by CoffeeScript 1.3.3
(function() {
  var app, credentials, express, fs, http, instagramLib, io, request, server;

  express = require('express');

  http = require('http');

  fs = require('fs');

  credentials = require('./credentials');

  instagramLib = require('instagram');

  request = require('request');

  app = express.createServer();

  server = app.listen(11000);

  io = require('socket.io').listen(server);

  io.set('log level', 1);

  app.configure(function() {
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.use(express.logger("dev"));
    app.use(express["static"](__dirname + "/public"));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    return app.use(express.errorHandler({
      showStack: true,
      dumpExceptions: true
    }));
  });

  app.all('/notify', function(req, res) {
    var geographyID, request_url;
    if (req.query && req.query['hub.mode'] === 'subscribe') {
      console.log('Challenge time!');
      res.send(req.query['hub.challenge']);
      return;
    }
    console.log(req);
    geographyID = getGeographyID('something');
    request_url = "https://api.instagram.com/v1/geographies/" + geographyID + "/media/recent?client_id=" + credentials.instagram.client_id;
    return request(request_url, function(error, response, body) {
      var bodyObj, photos;
      if (!error && response.statusCode === 200) {
        bodyObj = JSON.parse(body);
        photos = bodyObj.data;
        return console.log(photos);
      }
    });
  });

  app.get('/', function(req, res) {
    return res.render('index.jade');
  });

  app.get('/start', function(req, res) {
    return res.redirect("https://api.instagram.com/oauth/authorize/?client_id=" + credentials.instagram.client_id + "&redirect_uri=http://insta.dailyemerald.com/authorize&response_type=code");
  });

  app.get('/authorize', function(req, res) {
    var code, requestObj;
    code = req.query.code;
    requestObj = {
      method: 'POST',
      url: 'https://api.instagram.com/oauth/access_token',
      form: {
        'client_id': credentials.instagram.client_id,
        'client_secret': credentials.instagram.client_secret,
        'grant_type': 'authorization_code',
        'redirect_uri': 'http://insta.dailyemerald.com/authorize',
        'code': code
      }
    };
    if (code) {
      return request(requestObj, function(error, response, body) {
        console.log('error', error);
        console.log('body', body);
        console.log(' *** ');
        if (error === null) {
          body = JSON.parse(body);
          if (body.user && body.user.id) {
            res.session.user = body.user;
            return res.redirect('/manage');
          } else {
            return res.send('Oops!');
          }
        } else {
          return res.send('Something has gone horribly wrong. <a href="/start">Try again?</a>');
        }
      });
    } else {
      return res.send('oops! you gotta allow us for this to work');
    }
  });

  app.get('/manage', function(req, res) {
    return res.render('create.jade');
  });

  app.get('/feeds', function(req, res) {
    return res.send('feeds');
  });

  app.get('/show_subscriptions', function(req, res) {
    var requestObj;
    console.log('hi');
    requestObj = {
      method: "POST",
      url: "https://api.instagram.com/v1/subscriptions?client_secret=" + credentials.instagram.client_secret(+"&client_id=" + credentials.instagram.client_id)
    };
    console.log(requestObj.url);
    return request(requestObj, function(error, response, body) {
      return res.send(body);
    });
  });

}).call(this);
